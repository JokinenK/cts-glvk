#pragma once

#ifdef __cplusplus
extern "C" {
#endif

typedef enum CtsResult {
    CTS_SUCCESS = 0,
    CTS_NOT_READY = 1,
    CTS_TIMEOUT = 2,
    CTS_EVENT_SET = 3,
    CTS_EVENT_RESET = 4,
    CTS_INCOMPLETE = 5,
    CTS_ERROR_OUT_OF_HOST_MEMORY = -1,
    CTS_ERROR_OUT_OF_DEVICE_MEMORY = -2,
    CTS_ERROR_INITIALIZATION_FAILED = -3,
    CTS_ERROR_DEVICE_LOST = -4,
    CTS_ERROR_MEMORY_MAP_FAILED = -5,
    CTS_ERROR_LAYER_NOT_PRESENT = -6,
    CTS_ERROR_EXTENSION_NOT_PRESENT = -7,
    CTS_ERROR_FEATURE_NOT_PRESENT = -8,
    CTS_ERROR_INCOMPATIBLE_DRIVER = -9,
    CTS_ERROR_TOO_MANY_OBJECTS = -10,
    CTS_ERROR_FORMAT_NOT_SUPPORTED = -11,
    CTS_ERROR_FRAGMENTED_POOL = -12,
    CTS_ERROR_UNKNOWN = -13,
} CtsResult;

typedef enum CtsFilter {
    CTS_FILTER_NEAREST = 0,
    CTS_FILTER_LINEAR = 1,
    CTS_FILTER_NEAREST_MIPMAP_NEAREST = 2,
    CTS_FILTER_LINEAR_MIPMAP_NEAREST = 3,
    CTS_FILTER_NEAREST_MIPMAP_LINEAR = 4,
    CTS_FILTER_LINEAR_MIPMAP_LINEAR = 5,

    NUM_CTS_FILTERS
} CtsFilter;

typedef enum CtsSamplerMipmapMode {
    CTS_SAMPLER_MIPMAP_MODE_NEAREST = 0,
    CTS_SAMPLER_MIPMAP_MODE_LINEAR = 1,

    NUM_CTS_SAMPLER_MIPMAP_MODES
} CtsSamplerMipmapMode;

typedef enum CtsWrap {
    CTS_WRAP_S = 0,
    CTS_WRAP_T = 1,
    CTS_WRAP_R = 2,

    NUM_CTS_WRAPS
} CtsWrap;

typedef enum CtsWrapType {
    CTS_WRAP_TYPE_REPEAT = 0,
    CTS_WRAP_TYPE_MIRRORED_REPEAT = 1,
    CTS_WRAP_TYPE_CLAMP_TO_EDGE = 2,

    NUM_CTS_WRAP_TYPES
} CtsWrapType;

typedef enum CtsAttribType {
    CTS_ATTRIB_TYPE_INT8 = 0,
    CTS_ATTRIB_TYPE_INT16 = 1,
    CTS_ATTRIB_TYPE_INT32 = 2,

    CTS_ATTRIB_TYPE_UINT8 = 3,
    CTS_ATTRIB_TYPE_UINT16 = 4,
    CTS_ATTRIB_TYPE_UINT32 = 5,

    CTS_ATTRIB_TYPE_FLOAT = 6,
    CTS_ATTRIB_TYPE_DOUBLE = 7,
    CTS_ATTRIB_TYPE_BOOL = 8,

    CTS_ATTRIB_TYPE_UINT24_8 = 9,

    CTS_ATTRIB_TYPE_VEC2 = 10,
    CTS_ATTRIB_TYPE_VEC3 = 11,
    CTS_ATTRIB_TYPE_VEC4 = 12,

    CTS_ATTRIB_TYPE_IVEC2 = 13,
    CTS_ATTRIB_TYPE_IVEC3 = 14,
    CTS_ATTRIB_TYPE_IVEC4 = 15,

    CTS_ATTRIB_TYPE_UVEC2 = 16,
    CTS_ATTRIB_TYPE_UVEC3 = 17,
    CTS_ATTRIB_TYPE_UVEC4 = 18,

    CTS_ATTRIB_TYPE_BVEC2 = 19,
    CTS_ATTRIB_TYPE_BVEC3 = 20,
    CTS_ATTRIB_TYPE_BVEC4 = 21,

    CTS_ATTRIB_TYPE_MAT2 = 22,
    CTS_ATTRIB_TYPE_MAT3 = 23,
    CTS_ATTRIB_TYPE_MAT4 = 24,

    CTS_ATTRIB_TYPE_SAMPLER_1D = 25,
    CTS_ATTRIB_TYPE_SAMPLER_2D = 26,
    CTS_ATTRIB_TYPE_SAMPLER_3D = 27,
    CTS_ATTRIB_TYPE_SAMPLER_CUBE = 28,

    NUM_CTS_ATTRIB_TYPES
} CtsAttribType;

typedef enum CtsFrontFace {
    CTS_FRONT_FACE_CLOCKWISE = 0,
    CTS_FRONT_FACE_COUNTER_CLOCKWISE = 1,

    NUM_CTS_FRONT_FACES
} CtsFrontFace;

typedef enum CtsCullMode {
    CTS_CULL_MODE_NONE = 0,
    CTS_CULL_MODE_FRONT = 1,
    CTS_CULL_MODE_BACK = 2,
    CTS_CULL_MODE_FRONT_AND_BACK = 3,

    NUM_CTS_CULL_MODES
} CtsCullMode;

typedef enum CtsPolygonMode {
    CTS_POLYGON_MODE_POINT = 0,
    CTS_POLYGON_MODE_LINE = 1,
    CTS_POLYGON_MODE_FILL = 2,

    NUM_CTS_POLYGON_MODES
} CtsPolygonMode;

typedef enum CtsCompareOperator {
    CTS_COMPARE_OPERATOR_NEVER = 0,
    CTS_COMPARE_OPERATOR_LESS = 1,
    CTS_COMPARE_OPERATOR_EQUAL = 2,
    CTS_COMPARE_OPERATOR_LESS_OR_EQUAL = 3,
    CTS_COMPARE_OPERATOR_CREATER = 4,
    CTS_COMPARE_OPERATOR_NOT_EQUAL = 5,
    CTS_COMPARE_OPERATOR_GREATER_OR_EQUAL = 6,
    CTS_COMPARE_OPERATOR_ALWAYS = 7,

    NUM_CTS_COMPARE_OPERATORS
} CtsCompareOperator;

typedef enum CtsStencilAction {
    CTS_STENCIL_ACTION_KEEP,
    CTS_STENCIL_ACTION_ZERO,
    CTS_STENCIL_ACTION_REPLACE,
    CTS_STENCIL_ACTION_INCREMENT,
    CTS_STENCIL_ACTION_INCREMENTWRAP,
    CTS_STENCIL_ACTION_DECREASE,
    CTS_STENCIL_ACTION_DECREASEWRAP,
    CTS_STENCIL_ACTION_INVERT,

    NUM_CTS_STENCIL_ACTIONS
} CtsStencilAction;

typedef enum CtsFormat {
    CTS_IMAGE_FORMAT_RED,
    CTS_IMAGE_FORMAT_RG,
    CTS_IMAGE_FORMAT_RGB,
    CTS_IMAGE_FORMAT_RGBA,
    CTS_IMAGE_FORMAT_BGR,
    CTS_IMAGE_FORMAT_BGRA,
    CTS_IMAGE_FORMAT_DEPTH,
    CTS_IMAGE_FORMAT_DEPTHSTENCIL,
    CTS_IMAGE_FORMAT_DEPTH24STENCIL8,

    NUM_CTS_IMAGE_FORMATS
} CtsFormat;

typedef enum CtsImageViewType {
    CTS_IMAGE_VIEW_TYPE_1D,
    CTS_IMAGE_VIEW_TYPE_2D,
    CTS_IMAGE_VIEW_TYPE_3D,
    CTS_IMAGE_VIEW_TYPE_CUBE,
    CTS_IMAGE_VIEW_TYPE_1D_ARRAY,
    CTS_IMAGE_VIEW_TYPE_2D_ARRAY,
    CTS_IMAGE_VIEW_TYPE_CUBE_ARRAY,

    NUM_CTS_IMAGE_VIEW_TYPES
} CtsImageViewType;

typedef enum CtsTextureName {
    CTS_TEXTURE_NAME_DIFFUSE,
    CTS_TEXTURE_NAME_SPECULAR,
    CTS_TEXTURE_NAME_AMBIENT,
    CTS_TEXTURE_NAME_EMISSIVE,
    CTS_TEXTURE_NAME_HEIGHT,
    CTS_TEXTURE_NAME_NORMALS,
    CTS_TEXTURE_NAME_SHININESS,
    CTS_TEXTURE_NAME_OPACITY,
    CTS_TEXTURE_NAME_DISPLACEMENT,
    CTS_TEXTURE_NAME_LIGHTMAP,
    CTS_TEXTURE_NAME_REFLECTION,

    CTS_TEXTURE_NAME_PADDING1,
    NUM_CTS_TEXTURE_NAMES
} CtsTextureName;

typedef enum CtsShaderType {
    CTS_SHADER_TYPE_PIXEL,
    CTS_SHADER_TYPE_VERTEX,
    CTS_SHADER_TYPE_GEOMETRY,

    NUM_CTS_SHADER_TYPES
} CtsShaderType;

typedef enum CtsPrimitiveType {
    CTS_PRIMITIVE_TYPE_POINT,
    CTS_PRIMITIVE_TYPE_LINE,
    CTS_PRIMITIVE_TYPE_LINELOOP,
    CTS_PRIMITIVE_TYPE_LINESTRIP,
    CTS_PRIMITIVE_TYPE_TRIANGLE,
    CTS_PRIMITIVE_TYPE_TRIANGLESTRIP,
    CTS_PRIMITIVE_TYPE_TRIANGLEFAN,

    NUM_CTS_PRIMITIVE_TYPES
} CtsPrimitiveType;

typedef enum CtsBufferUsage {
    CTS_BUFFER_USAGE_STATIC_DRAW,
    CTS_BUFFER_USAGE_DYNAMIC_DRAW,
    CTS_BUFFER_USAGE_STREAM_DRAW,

    NUM_CTS_BUFFER_USAGES
} CtsBufferUsage;

typedef enum CtsBufferType {
    CTS_BUFFER_TYPE_INDEX,
    CTS_BUFFER_TYPE_VERTEX,
    CTS_BUFFER_TYPE_UNIFORM,
    
    NUM_CTS_BUFFER_TYPES
} CtsBufferType;

typedef enum CtsBlendFunc {
    CTS_BLEND_FUNC_ZERO,
    CTS_BLEND_FUNC_ONE,
    CTS_BLEND_FUNC_SRC_COLOR,
    CTS_BLEND_FUNC_ONE_MINUS_SRC_COLOR,
    CTS_BLEND_FUNC_DST_COLOR,
    CTS_BLEND_FUNC_ONE_MINUS_DST_COLOR,
    CTS_BLEND_FUNC_SRC_ALPHA,
    CTS_BLEND_FUNC_ONE_MINUS_SRC_ALPHA,
    CTS_BLEND_FUNC_DST_ALPHA,
    CTS_BLEND_FUNC_ONE_MINUS_DST_ALPHA,
    CTS_BLEND_FUNC_CONSTANT_COLOR,
    CTS_BLEND_FUNC_ONE_MINUS_CONSTANT_COLOR,
    CTS_BLEND_FUNC_CONSTANT_ALPHA,
    CTS_BLEND_FUNC_ONE_MINUS_CONSTANT_ALPHA,
    CTS_BLEND_FUNC_SRC_ALPHA_SATURATE,

    NUM_CTS_BLEND_FUNCS
} CtsBlendFunc;

typedef enum CtsRenderTargetAttachment {
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_0,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_1,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_2,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_3,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_4,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_5,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_6,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_7,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_8,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_9,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_10,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_11,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_12,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_13,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_14,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_15,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_16,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_17,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_18,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_19,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_20,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_21,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_22,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_23,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_24,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_25,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_26,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_27,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_28,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_29,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_30,
    CTS_RENDER_TARGET_COLOR_ATTACHMENT_31,
    CTS_RENDER_TARGET_DEPTH_ATTACHMENT,
    CTS_RENDER_TARGET_STENCIL_ATTACHMENT,

    NUM_CTS_RENDER_TARGET_ATTACHMENTS
} CtsRenderTargetAttachment;

typedef enum CtsRenderTargetType {
    CTS_RENDER_TARGET_TYPE_TEXTURE,
    CTS_RENDER_TARGET_TYPE_BUFFER,

    NUM_CTS_RENDER_TARGET_TYPES
} CtsRenderTargetType;

typedef enum CtsRenderTargetBind {
    CTS_RENDER_TARGET_BIND_READ,
    CTS_RENDER_TARGET_BIND_WRITE,
    CTS_RENDER_TARGET_BIND_READWRITE,

    NUM_CTS_RENDER_TARGET_BINDS
} CtsRenderTargetBind;

typedef enum CtsClearFlag {
    CTS_CLEAR_FLAG_COLOR        = (1 << 0),
    CTS_CLEAR_FLAG_DEPTH        = (1 << 1),
    CTS_CLEAR_FLAG_STENCIL      = (1 << 2),
    CTS_CLEAR_FLAG_COLORDEPTH   = CTS_CLEAR_FLAG_COLOR | CTS_CLEAR_FLAG_DEPTH,
    CTS_CLEAR_FLAG_COLORSTENCIL = CTS_CLEAR_FLAG_COLOR | CTS_CLEAR_FLAG_STENCIL,
    CTS_CLEAR_FLAG_DEPTHSTENCIL = CTS_CLEAR_FLAG_DEPTH | CTS_CLEAR_FLAG_STENCIL,
    CTS_CLEAR_FLAG_ALL          = CTS_CLEAR_FLAG_COLOR | CTS_CLEAR_FLAG_DEPTH | CTS_CLEAR_FLAG_STENCIL,
} CtsClearFlag; 

typedef enum CtsVertexInputRate {
    CTS_VERTEX_INPUT_RATE_VERTEX = 0,
    CTS_VERTEX_INPUT_RATE_INSTANCE = 1,

    NUM_CTS_VERTEX_INPUT_RATES
} CtsVertexInputRate;

typedef enum CtsSampleCountFlagBits {
    CTS_SAMPLE_COUNT_1_BIT,
    CTS_SAMPLE_COUNT_2_BIT,
    CTS_SAMPLE_COUNT_4_BIT,
    CTS_SAMPLE_COUNT_8_BIT,
    CTS_SAMPLE_COUNT_16_BIT,
    CTS_SAMPLE_COUNT_32_BIT,
    CTS_SAMPLE_COUNT_64_BIT,

    NUM_CTS_SAMPLE_COUNTS
} CtsSampleCountFlagBits;

typedef enum CtsLogicOp {
    CTS_LOGIC_OP_CLEAR = 0,
    CTS_LOGIC_OP_AND = 1,
    CTS_LOGIC_OP_AND_REVERSE = 2,
    CTS_LOGIC_OP_COPY = 3,
    CTS_LOGIC_OP_AND_INVERTED = 4,
    CTS_LOGIC_OP_NO_OP = 5,
    CTS_LOGIC_OP_XOR = 6,
    CTS_LOGIC_OP_OR = 7,
    CTS_LOGIC_OP_NOR = 8,
    CTS_LOGIC_OP_EQUIVALENT = 9,
    CTS_LOGIC_OP_INVERT = 10,
    CTS_LOGIC_OP_OR_REVERSE = 11,
    CTS_LOGIC_OP_COPY_INVERTED = 12,
    CTS_LOGIC_OP_OR_INVERTED = 13,
    CTS_LOGIC_OP_NAND = 14,
    CTS_LOGIC_OP_SET = 15,

    NUM_CTS_LOGIC_OPS
} CtsLogicOp;

typedef enum CtsBlendOp {
    CTS_BLEND_OP_ADD = 0,
    CTS_BLEND_OP_SUBTRACT = 1,
    CTS_BLEND_OP_REVERSE_SUBTRACT = 2,
    CTS_BLEND_OP_MIN = 3,
    CTS_BLEND_OP_MAX = 4,

    NUM_CTS_BLEND_OPS
} CtsBlendOp;

typedef enum CtsImageType {
    CTS_IMAGE_TYPE_1D = 0,
    CTS_IMAGE_TYPE_2D = 1,
    CTS_IMAGE_TYPE_3D = 2,

    NUM_CTS_IMAGE_TYPES
} CtsImageType;

typedef enum CtsImageUsage {
    CTS_IMAGE_USAGE_SAMPLED_BIT,
    CTS_IMAGE_USAGE_STORAGE_BIT,
    CTS_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,
    CTS_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,

    NUM_CTS_IMAGE_USAGES
} CtsImageUsage;

typedef enum CtsComponentSwizzle {
    CTS_COMPONENT_SWIZZLE_IDENTITY = 0,
    CTS_COMPONENT_SWIZZLE_ZERO = 1,
    CTS_COMPONENT_SWIZZLE_ONE = 2,
    CTS_COMPONENT_SWIZZLE_R = 3,
    CTS_COMPONENT_SWIZZLE_G = 4,
    CTS_COMPONENT_SWIZZLE_B = 5,
    CTS_COMPONENT_SWIZZLE_A = 6,

    NUM_CTS_COMPONENT_SWIZZLES
} CtsComponentSwizzle;

typedef enum CtsImageLayout {
    CTS_IMAGE_LAYOUT_UNDEFINED = 0,
    CTS_IMAGE_LAYOUT_GENERAL = 1,
    CTS_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,
    CTS_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,
    CTS_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,
    CTS_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,
    CTS_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,
    CTS_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,
    CTS_IMAGE_LAYOUT_PREINITIALIZED = 8,

    NUM_CTS_IMAGE_LAYOUTS
} CtsImageLayout;

typedef enum CtsDescriptorType {
    CTS_DESCRIPTOR_TYPE_SAMPLER = 0,
    CTS_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,
    CTS_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,
    CTS_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,
    CTS_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,
    CTS_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,
    CTS_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,
    CTS_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,
    CTS_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,
    CTS_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,
    CTS_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10,

    NUM_CTS_DESCRIPTOR_TYPES
} CtsDescriptorType;

typedef enum CtsStructureType {
    CTS_STRUCTURE_TYPE_APPLICATION_INFO = 0,
    CTS_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 1,
    CTS_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 2,
    CTS_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 3,
    CTS_STRUCTURE_TYPE_SUBMIT_INFO = 4,
    CTS_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5,
    CTS_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6,
    CTS_STRUCTURE_TYPE_BIND_SPARSE_INFO = 7,
    CTS_STRUCTURE_TYPE_FENCE_CREATE_INFO = 8,
    CTS_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9,
    CTS_STRUCTURE_TYPE_EVENT_CREATE_INFO = 10,
    CTS_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11,
    CTS_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12,
    CTS_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13,
    CTS_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14,
    CTS_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15,
    CTS_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16,
    CTS_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17,
    CTS_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18,
    CTS_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,
    CTS_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,
    CTS_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,
    CTS_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,
    CTS_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,
    CTS_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,
    CTS_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,
    CTS_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,
    CTS_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,
    CTS_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28,
    CTS_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29,
    CTS_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30,
    CTS_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31,
    CTS_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,
    CTS_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33,
    CTS_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34,
    CTS_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35,
    CTS_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36,
    CTS_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37,
    CTS_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38,
    CTS_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39,
    CTS_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40,
    CTS_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41,
    CTS_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42,
    CTS_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43,
    CTS_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44,
    CTS_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45,
    CTS_STRUCTURE_TYPE_MEMORY_BARRIER = 46,
    CTS_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47,
    CTS_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48,

    NUM_CTS_STRUCTURE_TYPES
} CtsStructureType;

typedef enum CtsColorComponentFlagBits {
    CTS_COLOR_COMPONENT_R_BIT = 0x00000001,
    CTS_COLOR_COMPONENT_G_BIT = 0x00000002,
    CTS_COLOR_COMPONENT_B_BIT = 0x00000004,
    CTS_COLOR_COMPONENT_A_BIT = 0x00000008,
} CtsColorComponentFlagBits;

typedef enum CtsMemoryMapFlags {
    CTS_MEMORY_MAP_RESERVED,
} CtsMemoryMapFlags;

typedef enum CtsCommandPoolCreateFlagBits {
    CTS_COMMAND_POOL_CREATE_TRANSIENT_BIT = 0x00000001,
    CTS_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = 0x00000002,
} CtsCommandPoolCreateFlagBits;

typedef enum CtsCommandBufferLevel {
    CTS_COMMAND_BUFFER_LEVEL_PRIMARY = 0,
    CTS_COMMAND_BUFFER_LEVEL_SECONDARY = 1,

    NUM_CTS_COMMAND_BUFFER_LEVELS
} CtsCommandBufferLevel;

typedef enum CtsCommandBufferUsageFlagBits {
    CTS_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x00000001,
    CTS_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x00000002,
    CTS_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x00000004,
} CtsCommandBufferUsageFlagBits;

typedef enum CtsQueryControlFlagBits {
    CTS_QUERY_CONTROL_PRECISE_BIT = 0x00000001,
} CtsQueryControlFlagBits;

typedef enum CtsQueryPipelineStatisticFlagBits {
    CTS_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = 0x00000001,
    CTS_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = 0x00000002,
    CTS_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = 0x00000004,
    CTS_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = 0x00000008,
    CTS_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = 0x00000010,
    CTS_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = 0x00000020,
    CTS_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = 0x00000040,
    CTS_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = 0x00000080,
    CTS_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = 0x00000100,
    CTS_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = 0x00000200,
    CTS_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = 0x00000400,
} CtsQueryPipelineStatisticFlagBits;

typedef enum CtsAttachmentLoadOp {
    CTS_ATTACHMENT_LOAD_OP_LOAD = 0,
    CTS_ATTACHMENT_LOAD_OP_CLEAR = 1,
    CTS_ATTACHMENT_LOAD_OP_DONT_CARE = 2,

    NUM_CTS_ATTACHMENT_LOAD_OPS
} CtsAttachmentLoadOp;

typedef enum CtsAttachmentStoreOp {
    CTS_ATTACHMENT_STORE_OP_STORE = 0,
    CTS_ATTACHMENT_STORE_OP_DONT_CARE = 1,

    NUM_CTS_ATTACHMENTS_STORE_OPS
} CtsAttachmentStoreOp;

typedef enum CtsPipelineBindPoint {
    CTS_PIPELINE_BIND_POINT_GRAPHICS = 0,
    CTS_PIPELINE_BIND_POINT_COMPUTE = 1,

    NUM_CTS_PIPELINE_BIND_POINTS
} CtsPipelineBindPoint;

typedef enum CtsPipelineStageFlagBits {
    CTS_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,
    CTS_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,
    CTS_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,
    CTS_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,
    CTS_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,
    CTS_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,
    CTS_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,
    CTS_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,
    CTS_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,
    CTS_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,
    CTS_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,
    CTS_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,
    CTS_PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,
    CTS_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,
    CTS_PIPELINE_STAGE_HOST_BIT = 0x00004000,
    CTS_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,
    CTS_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000
} CtsPipelineStageFlagBits;

typedef enum CtsShaderStageFlagBits {
    CTS_SHADER_STAGE_VERTEX_BIT = 0x00000001,
    CTS_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x00000002,
    CTS_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x00000004,
    CTS_SHADER_STAGE_GEOMETRY_BIT = 0x00000008,
    CTS_SHADER_STAGE_FRAGMENT_BIT = 0x00000010,
    CTS_SHADER_STAGE_COMPUTE_BIT = 0x00000020,
    CTS_SHADER_STAGE_ALL_GRAPHICS = 0x0000001F,
    CTS_SHADER_STAGE_ALL = 0x7FFFFFFF
} CtsShaderStageFlagBits;

typedef enum CtsAccessFlagBits {
    CTS_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x00000001,
    CTS_ACCESS_INDEX_READ_BIT = 0x00000002,
    CTS_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,
    CTS_ACCESS_UNIFORM_READ_BIT = 0x00000008,
    CTS_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x00000010,
    CTS_ACCESS_SHADER_READ_BIT = 0x00000020,
    CTS_ACCESS_SHADER_WRITE_BIT = 0x00000040,
    CTS_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x00000080,
    CTS_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,
    CTS_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,
    CTS_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,
    CTS_ACCESS_TRANSFER_READ_BIT = 0x00000800,
    CTS_ACCESS_TRANSFER_WRITE_BIT = 0x00001000,
    CTS_ACCESS_HOST_READ_BIT = 0x00002000,
    CTS_ACCESS_HOST_WRITE_BIT = 0x00004000,
    CTS_ACCESS_MEMORY_READ_BIT = 0x00008000,
    CTS_ACCESS_MEMORY_WRITE_BIT = 0x00010000,
} CtsAccessFlagBits;

typedef enum CtsDependencyFlagBits {
    CTS_DEPENDENCY_BY_REGION_BIT = 0x00000001
} CtsDependencyFlagBits;

typedef enum CtsQueryType {
    CTS_QUERY_TYPE_OCCLUSION = 0,
    CTS_QUERY_TYPE_PIPELINE_STATISTICS = 1,
    CTS_QUERY_TYPE_TIMESTAMP = 2,

    NUM_CTS_QUERY_TYPES
} CtsQueryType;

typedef enum CtsSubpassContents {
    CTS_SUBPASS_CONTENTS_INLINE = 0,
    CTS_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = 1,

    NUM_CTS_SUBPASS_CONTENTS
} CtsSubpassContents;

typedef enum CtsIndexType {
    CTS_INDEX_TYPE_UINT16 = 0,
    CTS_INDEX_TYPE_UINT32 = 1,

    NUM_CTS_INDEX_TYPES
} CtsIndexType;

typedef enum CtsDynamicState {
    CTS_DYNAMIC_STATE_VIEWPORT = 0,
    CTS_DYNAMIC_STATE_SCISSOR = 1,
    CTS_DYNAMIC_STATE_LINE_WIDTH = 2,
    CTS_DYNAMIC_STATE_DEPTH_BIAS = 3,
    CTS_DYNAMIC_STATE_BLEND_CONSTANTS = 4,
    CTS_DYNAMIC_STATE_DEPTH_BOUNDS = 5,
    CTS_DYNAMIC_STATE_STENCIL_COMPARE_MASK = 6,
    CTS_DYNAMIC_STATE_STENCIL_WRITE_MASK = 7,
    CTS_DYNAMIC_STATE_STENCIL_REFERENCE = 8,

    NUM_CTS_DYNAMIC_STATES
} CtsDynamicState;

typedef enum CtsImageAspectFlagBits {
    CTS_IMAGE_ASPECT_COLOR_BIT = 0x00000001,
    CTS_IMAGE_ASPECT_DEPTH_BIT = 0x00000002,
    CTS_IMAGE_ASPECT_STENCIL_BIT = 0x00000004,
    CTS_IMAGE_ASPECT_METADATA_BIT = 0x00000008
} CtsImageAspectFlagBits;

typedef enum CtsQueryResultFlagBits {
    CTS_QUERY_RESULT_64_BIT = 0x00000001,
    CTS_QUERY_RESULT_WAIT_BIT = 0x00000002,
    CTS_QUERY_RESULT_WITH_AVAILABILITY_BIT = 0x00000004,
    CTS_QUERY_RESULT_PARTIAL_BIT = 0x00000008,
} CtsQueryResultFlagBits;

typedef enum CtsStencilFaceFlagBits {
    CTS_STENCIL_FACE_FRONT_BIT = 0x00000001,
    CTS_STENCIL_FACE_BACK_BIT = 0x00000002,
    CTS_STENCIL_FACE_FRONT_AND_BACK = 0x00000003
} CtsStencilFaceFlagBits;

typedef enum CtsCommandBufferResetFlagBits {
    CTS_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = 0x00000001
} CtsCommandBufferResetFlagBits;

typedef enum CtsBorderColor {
    CTS_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0,
    CTS_BORDER_COLOR_INT_TRANSPARENT_BLACK = 1,
    CTS_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 2,
    CTS_BORDER_COLOR_INT_OPAQUE_BLACK = 3,
    CTS_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 4,
    CTS_BORDER_COLOR_INT_OPAQUE_WHITE = 5,

    CTS_NUM_BORDER_COLORS
} CtsBorderColor;

typedef enum CtsQueueFlagBits {
    CTS_QUEUE_GRAPHICS_BIT = 0x00000001,
    CTS_QUEUE_COMPUTE_BIT = 0x00000002,
    CTS_QUEUE_TRANSFER_BIT = 0x00000004,
    CTS_QUEUE_SPARSE_BINDING_BIT = 0x00000008,
} CtsQueueFlagBits;

typedef enum CtsFenceCreateFlagBits {
    CTS_FENCE_CREATE_SIGNALED_BIT = 0x00000001,
} CtsFenceCreateFlagBits;

#ifdef __cplusplus
}
#endif